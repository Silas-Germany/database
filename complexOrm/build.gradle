plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}
apply plugin: "com.android.library"
apply plugin: 'kotlin-android-extensions'
// Kotlin annotation processor
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
        //noinspection OldTargetApi
        targetSdkVersion 28
        versionCode 1
        versionName "1.1"
    }
    buildTypes {
        release {
            minifyEnabled true
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.manifest.srcFile("src/androidMain/AndroidManifest.xml")
        main.java.srcDir("src/androidMain/kotlin")
        test.java.srcDir("src/androidTest/kotlin")
    }
}
version = "1.1"
kotlin {
    android('android')
    linuxX64("linux") {
        compilations.main.cinterops {
            sqlite3
            uuid
        }
        binaries { executable() }
    }
    iosX64("ios") {
        compilations.main.cinterops {
            sqlite3
            uuid
        }
        binaries { framework() }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')

                implementation project(":complexOrmApi")
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        androidMain {
            dependencies {
                implementation kotlin('stdlib')

                implementation 'net.danlew:android.joda:2.10.2'
            }
        }
        androidTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')

                implementation 'net.danlew:android.joda:2.10.2'
                implementation project(":complexOrmApi")
            }
        }
        iosMain { }
        iosTest { }
        linuxMain { }
        linuxTest { }
    }
}

dependencies {
    kaptTest project(":complexOrmProcessor")
}

task "copyGeneratedFiles" {
    doFirst {
        exec {
            commandLine "cp",
                    "build/generated/source/kaptKotlin/releaseUnitTest/com/github/silasgermany/complexorm/ComplexOrmTableInfo.kt",
                    "src/linuxTest/kotlin/com/github/silasgermany/complexorm/"
        }
    }
    doFirst {
        exec {
            commandLine "cp",
                    "build/generated/source/kaptKotlin/releaseUnitTest/com/github/silasgermany/complexorm/ComplexOrmDatabaseSchema.kt",
                    "src/linuxTest/kotlin/com/github/silasgermany/complexorm/"
        }
    }
    doLast {
        exec {
            commandLine "sed",
                    "-i.bak",
                    "s/ @JvmWildcard//",
                    "src/linuxTest/kotlin/com/github/silasgermany/complexorm/ComplexOrmDatabaseSchema.kt"
        }
    }
    doLast {
        exec {
            commandLine "sed",
                    "-i.bak",
                    "s/import kotlin.jvm.JvmWildcard//",
                    "src/linuxTest/kotlin/com/github/silasgermany/complexorm/ComplexOrmDatabaseSchema.kt"
        }
    }
    dependsOn "kaptReleaseUnitTestKotlinAndroid"
}

task iosTest {
    def device = project.findProperty("iosDevice")?.toString() ?: "iPhone 8"
    dependsOn kotlin.targets.ios.binaries.getTest('DEBUG').linkTaskName
    group = JavaBasePlugin.VERIFICATION_GROUP
    description = "Runs tests for target 'ios' on an iOS simulator"

    doLast {
        def binary = kotlin.targets.ios.binaries.getTest('DEBUG').outputFile
        exec {
            commandLine 'xcrun', 'simctl', 'spawn', device, binary.absolutePath
        }
    }
}
